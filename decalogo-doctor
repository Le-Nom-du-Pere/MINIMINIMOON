#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""Validador integral del bundle de dec치logos."""

from __future__ import annotations

import argparse
import hashlib
import json
import sys
from pathlib import Path

from pdm_contra.bridges.decalogo_loader_adapter import load_decalogos


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description="Doctor de dec치logos")
    parser.add_argument("--bundle", required=True, help="Directorio que contiene los JSON limpios")
    parser.add_argument("--loader", default="decatalogo_loader", help="Nombre simb칩lico del loader")
    return parser.parse_args()


def main() -> int:
    args = parse_args()
    bundle_dir = Path(args.bundle)
    paths = [
        bundle_dir / "decalogo-full.latest.clean.json",
        bundle_dir / "decalogo-industrial.latest.clean.json",
        bundle_dir / "dnp-standards.latest.clean.json",
        bundle_dir / "crosswalk.latest.json",
    ]
    for path in paths:
        if not path.exists():
            print(f"Falta archivo requerido: {path}")
            return 1
    result = load_decalogos([str(p) for p in paths[:-1]], crosswalk_path=str(paths[-1]))
    payload = json.dumps(result, ensure_ascii=False, sort_keys=True).encode("utf-8")
    digest = hashlib.sha256(payload).hexdigest()
    report = ["# Resultado decalogo-doctor", "", "- Loader: {}".format(args.loader), f"- SHA256 bundle: {digest}"]
    report_path = Path("reports") / "tests_contract.md"
    report_path.write_text("\n".join(report) + "\n", encoding="utf-8")
    print("OK: bundle v치lido y estructurado. Hash:", digest)
    return 0


if __name__ == "__main__":
    sys.exit(main())
